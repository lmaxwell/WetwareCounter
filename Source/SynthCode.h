class SynthCode
{
public:


    String livemode="PluginHost.nextBar()=>now;\n";
    String nolivemode="\n";
    String isLive=livemode;
    String sync="PluginHost.nextBar()=>now;\n";
    String fragment="4.0";
    String mode="i";
    String code;
    
    String getCode()
    {
    
    code="class EuclidSeq{\n"
     "int total;\n"
     "int beat;\n"
     "int cur;\n"
"     int rotation;\n"
"\n"
"     fun void set(int _total,int _beat,int _rotation)\n"
"     {\n"
"         _total=>total;\n"
"         _beat=>beat;\n"
"         _rotation=>rotation;\n"
"         0=>cur;\n"
"     }\n"
"\n"
"     fun int euclide( int c, int k, int n, int r ) {\n"
"            return (((c + r) * k) % n) < k;\n"
"     }\n"
"\n"
"     fun void setRotation(int r)\n"
"     {\n"
"         r=>rotation;\n"
"     }\n"
"\n"
"     fun void random()\n"
"     {\n"
"         Math.random2(0,total)=>rotation;\n"
"     }\n"
"\n"
"     fun int genNext()\n"
"     {\n"
"         cur++;\n"
"         return euclide(cur-1,beat,total,rotation);\n"
"     }\n"
"}\n"
"\n"
"\n"
"\n"
"class Scale{\n"
"	\n"
"  static int note[];\n"
"	  \n"
"	fun void set(int p,string mode)\n"
"	{\n"
"    if(mode==\"ionian\" || mode==\"i\")\n"
"      [p,p+2,p+4,p+5,p+7,p+9,p+11]@=>note;\n"
"	else if(mode==\"d||ian\" || mode==\"ii\")\n"
"			[p,p+2,p+3,p+5,p+7,p+8,p+10]@=>note;\n"
"    else if(mode==\"phrygian\" || mode==\"iii\")\n"
"      [p,p+1,p+3,p+5,p+7,p+8,p+10]@=>note;\n"
"    else if(mode==\"lydian\" || mode==\"iv\")\n"
"      [p,p+2,p+4,p+6,p+7,p+9,p+11]@=>note;\n"
"    else if(mode==\"mixolydian\" || mode ==\"v\")\n"
"      [p,p+2,p+4,p+5,p+7,p+9,p+10]@=>note;\n"
"    else if(mode==\"aeolian\" || mode==\"vi\")\n"
"      [p,p+2,p+3,p+5,p+7,p+8,p+10]@=>note;\n"
"    else if(mode==\"locrian\" || mode==\"vii\")\n"
"      [p,p+1,p+3,p+5,p+7,p+8,p+10]@=>note;\n"
"    else if(mode==\"major7\")\n"
"      [p,p+4,p+7,p+11]@=>note;\n"
"    else if(mode==\"minor7\")\n"
"      [p,p+3,p+7,p+10]@=>note;\n"
"    else if(mode==\"dom7\")\n"
"      [p,p+4,p+7,p+10]@=>note;\n"
"    else if(mode==\"mMaj7\")\n"
"      [p,p+3,p+7,p+11]@=>note;\n"
"    else\n"
"      [p,p+2,p+4,p+5,p+7,p+9,p+11]@=>note;\n"
"	}	\n"
"\n"
"    fun int sample()\n"
"    {\n"
"        note.cap()=>int len;\n"
"        return note[Math.random2(0,len-1)];\n"
"    }\n"
"       \n"
"    fun int get(int degree)\n"
"    {\n"
"        return note[(degree-1)%note.cap()];\n"
"    }\n"
"        \n"
"}\n" +
sync +
"PluginHost.quarterDur()=>dur pulse;\n" 
"Scale scale;\n"
"scale.set(36,\"" + mode +"\");\n"
"int index[];\n"
"[0,1,1,2,3,5,8,13,21,34,55] @=> index;\n"
"// Random or not\n"
"1=>int isRand;\n"
"Math.random2(3,7) => int num;\n"
"Math.random2(0,7) => int off;\n"
"\n"
"EuclidSeq euclidSeq;\n"
"euclidSeq.set(16,num,0);\n"
"\n"
"MidiMsg msg;\n"
"spork ~sec(num,off,1);\n"
"PluginHost.onStop()=>now;\n"
"0=> int i;\n"
"1.=>float beat_;\n"
"fun void sec(int num,int offset,int isBass)\n"
"{\n"
"    now + PluginHost.quarterDur()*16=>time later;\n"
"    0=>int i;     \n"
"    while(true)\n"
"    {\n"
"        if(euclidSeq.genNext())\n"
"        //if(1)\n"
"        {\n"
"        scale.get(index[i]+offset)+Math.random2(-1,2)*(12)*isRand*(1-isBass)=>int note;\n"
"        (i+1)%num=>i;\n"
"        0x90=>msg.data1;\n"
"        note=>msg.data2;\n"
"        127=>msg.data3;\n"
"        PluginHost.sendMidi(msg);\n"
"        \n"
"        PluginHost.nextSixteenth()=>now;\n"
" 		0x80=>msg.data1;\n"
"        note=>msg.data2;\n"
"        127=>msg.data3;\n"
"        PluginHost.sendMidi(msg);\n"
"		}\n"
"        else\n"
"			PluginHost.nextSixteenth()=>now;\n"
"        \n"
"    }\n"
" 		0x80=>msg.data1;\n"
"        0=>msg.data2;\n"
"        127=>msg.data3;\n"
"        PluginHost.sendMidi(msg);\n"
"}\n";
        return code;
    }

    String allOff="MidiMsg msg;\n"
"        0xb0=>msg.data1;\n"
"        123=>msg.data2;\n"
"        0=>msg.data3;\n"
"        PluginHost.sendMidi(msg);\n";

};
